@import "../../../../../assets/styles/vars";

.intro-section{
  min-height: 100vh;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  background-color: black;

  .background-stars{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-size: cover;
    opacity: 0.3;
  }

  .background-stars-animation{
    animation: backgroundStarsAnimation 3s linear;
    animation-delay: 0;
    @keyframes backgroundStarsAnimation {
      0%   { transform: scale(1) translate(0px, 0px); }
      70%  { transform: scale(3) translate(-50px, 15px); }
      100% { transform: scale(100) translate(-200px, 60px); }
    }
  }

  h1{
    text-align: center;
    color: white;
  }

  button{
    color: white;
  }
}


.video-intro-section{
  video{
    position: fixed;
    top: -10vh;
    left: -10%;
    width: 120%;
    height: 120vh;
    object-fit: cover;
    transform-style: preserve-3d;
    transform: scale(150);
    perspective: 100px;
    transition: $animation;
    pointer-events: none;
    opacity: 0;
  }
}

.video-intro-active{
  video{
    transition: all 1s ease, pointer-events 2s linear;
    transform: scale(1) translate(15px, 20px);
    pointer-events: all;
    opacity: 1;
  }
}


@function randomNum($max, $min: 0, $u: 1) {
  @return ($min + random($max)) * $u;
}

@function randomColor() {
  @return rgb(randomNum(255), randomNum(255), randomNum(255));
}

@function shadowSet($maxWidth, $maxHeight, $count) {
  $shadow: 0 0 0 0 randomColor();

  @for $i from 0 through $count {
    $x: #{random(10000) / 10000 * $maxWidth};
    $y: #{random(10000) / 10000 * $maxHeight};

    $shadow: $shadow, #{$x} #{$y} 0 #{random(5)}px randomColor();
  }

  @return $shadow;
}

.lines-speed {
  margin: auto;
  perspective: 5px;
  perspective-origin: 50% 50%;
  position: relative;
  animation: hueRotate 20s infinite linear;
  top: 200px;
  pointer-events: none;
  opacity: 0;
  z-index: 2;
  .g-group {
    position: absolute;
    width: 100vw;
    height: 100vh;
    left: 0vw;
    top: 0vh;
    transform-style: preserve-3d;
    animation: move 8s infinite linear;
  }

  .g-group:nth-child(2) {
    animation: move 8s infinite linear;
    animation-delay: -4s;
  }

  .item {
    position: absolute;
    width: 100%;
    height: 100%;
    background-size: cover;
    opacity: 1;
    animation: fade 8s infinite linear;
    animation-delay: 0;
  }
  .item::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 1px;
    height: 1px;
    border-radius: 50%;
    box-shadow: shadowSet(100vw, 100vh, 500);
  }

  .g-group:nth-child(2) .item {
    animation-delay: -4s;
  }

  .item-right {
    transform: rotateY(90deg) translateZ(500px);
  }

  .item-left {
    transform: rotateY(-90deg) translateZ(500px);
  }

  .item-top {
    transform: rotateX(90deg) translateZ(500px);
  }

  .item-bottom {
    transform: rotateX(-90deg) translateZ(500px);
  }

  .item-middle {
    transform: rotateX(180deg) translateZ(1000px);
  }

  @keyframes move {
    0% {
      transform: translateZ(-200px) rotate(0deg);
    }
    100% {
      transform: translateZ(150px) rotate(0deg);
    }
  }

  @keyframes fade {
    0% {
      opacity: 0.2;
    }
    25%,
    60% {
      opacity: 1;
    }
    100% {
      opacity: 0.2;
    }
  }

  @keyframes hueRotate {
    0% {
      filter: hue-rotate(0);
    }
    100% {
      filter: hue-rotate(360deg);
    }
  }
}

.lines-speed-active {
  opacity: 1;
}


.blink-video {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 20000;
  mix-blend-mode: multiply;
  pointer-events: none;
}


